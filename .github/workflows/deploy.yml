name: Build and deploy

on: [ push ]

env:
  IMAGE: ghcr.io/${{ github.repository }}/dp-doh:${{ github.sha }}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: '16.x'

      - name: Setup gradle dependency cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'buildSrc/src/main/kotlin/Constants.kt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Test with Gradle
        run: ./gradlew test--info

  build:
    name: Build and Publish Docker image
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.IMAGE }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Archive NAIS yaml
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v1
        with:
          name: nais-yaml
          path: nais

  deploy-dev:
    name: Deploy to dev
    needs: [ test, build ]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/alerts.yaml,nais/nais.yaml
          VARS: nais/dev/vars.yaml
          PRINT_PAYLOAD: true

  deploy-prod:
    name: Deploy to Production
    needs: [ test, build ]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/alerts.yaml,nais/nais.yaml
          VARS: nais/prod/vars.yaml
          PRINT_PAYLOAD: true
